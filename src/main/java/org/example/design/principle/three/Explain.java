package org.example.design.principle.three;

/**
 *  依赖倒置原则：https://app.yinxiang.com/fx/badd7e22-6d37-43ce-9133-4034067c3fc0
 *
 *  依赖倒置原则在面向对象中十分常见，几乎所有的项目都会遵守，此23种设计模式中更是经常出现。
 *
 *  其核心思想是：要面向接口编程，不要面向实现编程。
 *
 *  依赖倒置原则是实现开闭原则的重要途径之一，它降低了客户与实现模块之间的耦合。
 *  由于在软件设计中，细节具有多变性，而抽象层则相对稳定，因此以抽象为基础搭建起来的架构要比以细节为基础搭建起来的架构要稳定得多。这里的抽象指的是接口或者抽象类，而细节是指具体的实现类。
 *
 *  依赖倒置原则的目的是通过要面向接口的编程来降低类间的耦合性，所以我们在实际编程中只要遵循以下4点，就能在项目中满足这个规则。
 *      1.  每个类尽量提供接口或抽象类，或者两者都具备。
 *      2.  变量的声明类型尽量是接口或者是抽象类。
 *      3.  任何类都不应该从具体类派生。
 *      4.  使用继承时尽量遵循里氏替换原则。
 *
 * Author: GL
 * Date: 2021-12-08
 */
public class Explain {
}
